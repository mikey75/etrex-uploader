<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>net.wirelabs</groupId>
    <artifactId>etrex-uploader</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <logback.version>1.5.7</logback.version>
        <mockito.version>4.1.0</mockito.version>
        <lombok.version>1.18.22</lombok.version>
        <junit.version>5.8.2</junit.version>
        <assertj.version>3.23.1</assertj.version>
        <awaitility.version>4.2.0</awaitility.version>
        <gson.version>2.9.1</gson.version>
        <nanohttpd.version>2.3.1</nanohttpd.version>
        <xmlbeans.version>5.2.1</xmlbeans.version>
        <swagger.annotations.version>1.5.24</swagger.annotations.version>
        <swagger.codegen.plugin.version>2.3.1</swagger.codegen.plugin.version>
        <fit.sdk.version>21.120.0</fit.sdk.version>
        <!-- JaCoCo Properties -->
        <jacoco.version>0.8.12</jacoco.version>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.jacoco.reportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.language>java</sonar.language>

    </properties>

    <dependencies>
        <dependency>
            <groupId>net.wirelabs</groupId>
            <artifactId>jmaps-viewer</artifactId>
            <version>1.1</version>
        </dependency>

        <dependency>
            <groupId>net.wirelabs</groupId>
            <artifactId>eventbus</artifactId>
            <version>1.2.1</version>
        </dependency>

        <dependency>
            <groupId>com.miglayout</groupId>
            <artifactId>miglayout-swing</artifactId>
            <version>5.3</version>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp</groupId>
            <artifactId>logging-interceptor</artifactId>
            <version>2.7.5</version>
        </dependency>

        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger.annotations.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.nanohttpd</groupId>
            <artifactId>nanohttpd</artifactId>
            <version>${nanohttpd.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.xmlbeans</groupId>
            <artifactId>xmlbeans</artifactId>
            <version>${xmlbeans.version}</version>
        </dependency>
        <!-- log4j is for xmlbeans only, it needs it -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.23.1</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.osgeo</groupId>
            <artifactId>proj4j</artifactId>
            <version>0.1.0</version>
        </dependency>

        <dependency>
            <groupId>com.garmin</groupId>
            <artifactId>fit</artifactId>
            <version>${fit.sdk.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <configuration>
                    <excludes>
                        <exclude>com/strava/**</exclude>
                        <exclude>com/topografix/**</exclude>
                        <exclude>com/garmin/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>

                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>
                                        net.wirelabs.etrex.uploader.EtrexUploaderRunner
                                    </mainClass>
                                </manifest>
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!-- JUnit 5 requires Surefire version 2.22.0 or higher -->
                <version>2.22.0</version>
                <configuration>
                    <argLine>@{argLine} -Dfile.encoding=UTF-8</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>prepare-version-file</id>
                        <phase>compile</phase>
                        <configuration>
                            <target>
                                <echo file="${basedir}/etrex-uploader.version">${project.version}</echo>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <property name="destDir" value="${basedir}/target/distpack"/>
                                <mkdir dir="${destDir}"/>
                                <copy tofile="${destDir}/etrex-uploader.jar" file="${basedir}/target/etrex-uploader-1.0-SNAPSHOT-jar-with-dependencies.jar"/>
                                <copy tofile="${destDir}/appIcon.png" file="${basedir}/src/main/resources/images/garmin.png"/>
                                <copy toFile="${destDir}/logback.xml" file="${basedir}/logback.xml"/>
                                <copy toFile="${destDir}/config.properties" file="${basedir}/src/main/resources/config.properties"/>
                                <copy toFile="${destDir}/maps/defaultMap.xml" file="${basedir}/maps/defaultMap.xml"/>
                                <copy toFile="${destDir}/etrex-uploader.version" file="${basedir}/etrex-uploader.version"/>
                                <zip basedir="${destDir}" destfile="${basedir}/target/etrex-uploader.zip"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.xmlbeans</groupId>
                <artifactId>xmlbeans</artifactId>
                <version>${xmlbeans.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <sourceDir>src/main/resources/schemas/garmin</sourceDir>
                    <recurseSourceSubdirs>true</recurseSourceSubdirs>
                    <repackage>net.wirelabs.etrex.uploader</repackage>
                    <name>xml</name>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-core</artifactId>
                        <version>2.23.1</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-codegen-maven-plugin</artifactId>
                <version>${swagger.codegen.plugin.version}
                </version>  <!-- latest version that generates working java client -->

                <executions>
                    <execution>

                        <goals>
                            <goal>generate</goal>
                        </goals>

                        <configuration>
                            <inputSpec>${basedir}/src/main/resources/schemas/strava/swagger.json</inputSpec>
                            <language>java</language>
                            <withXml>false</withXml>
                            <generateApis>false</generateApis>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <generateApiDocumentation>false</generateApiDocumentation>
                            <generateModelDocumentation>false</generateModelDocumentation>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <additionalProperties>hideGenerationTimestamp=true</additionalProperties>
                            <modelPackage>com.strava.model</modelPackage>
                            <apiPackage>com.strava.api</apiPackage>
                            <addCompileSourceRoot>true</addCompileSourceRoot>
                            <configOptions>
                                <dateLibrary>java8</dateLibrary>
                                <sourceFolder>/</sourceFolder>
                                <serializableModel>true</serializableModel>
                            </configOptions>
                            <output>target/generated-sources</output>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>